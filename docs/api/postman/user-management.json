{
  "info": {
    "name": "ShareStack 用户管理 API",
    "description": "ShareStack 知识付费平台用户管理模块 API 接口测试集合",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://api.sharestack.com/api/v1",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "认证授权",
      "item": [
        {
          "name": "用户注册",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"test_user\",\n  \"email\": \"test@example.com\",\n  \"password\": \"TestPass123!\",\n  \"user_type\": \"creator\",\n  \"agree_terms\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.user_id) {",
                  "        pm.collectionVariables.set('user_id', response.data.user_id);",
                  "        console.log('用户ID已保存:', response.data.user_id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "用户登录",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"TestPass123!\",\n  \"remember_me\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.access_token) {",
                  "        pm.collectionVariables.set('access_token', response.data.access_token);",
                  "        pm.collectionVariables.set('refresh_token', response.data.refresh_token);",
                  "        console.log('登录成功，令牌已保存');",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "刷新令牌",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.access_token) {",
                  "        pm.collectionVariables.set('access_token', response.data.access_token);",
                  "        pm.collectionVariables.set('refresh_token', response.data.refresh_token);",
                  "        console.log('令牌刷新成功');",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "用户登出",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.collectionVariables.set('access_token', '');",
                  "    pm.collectionVariables.set('refresh_token', '');",
                  "    console.log('登出成功，令牌已清除');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "忘记密码",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot-password"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "第三方登录",
      "item": [
        {
          "name": "微信登录",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"061QA7ll2yUOYm0eEvml2Z4kjp3QA7lh\",\n  \"state\": \"random_state_string\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/social/wechat",
              "host": ["{{base_url}}"],
              "path": ["auth", "social", "wechat"]
            }
          },
          "response": []
        },
        {
          "name": "Google登录",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/social/google",
              "host": ["{{base_url}}"],
              "path": ["auth", "social", "google"]
            }
          },
          "response": []
        },
        {
          "name": "GitHub登录",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"github_auth_code\",\n  \"state\": \"random_state_string\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/social/github",
              "host": ["{{base_url}}"],
              "path": ["auth", "social", "github"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "用户资料管理",
      "item": [
        {
          "name": "获取个人资料",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "更新个人资料",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"display_name\": \"测试用户\",\n  \"bio\": \"这是一个测试用户的个人简介\",\n  \"location\": \"北京, 中国\",\n  \"website\": \"https://example.com\",\n  \"social_links\": {\n    \"twitter\": \"testuser\",\n    \"github\": \"testuser\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "上传头像",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "avatar",
                  "type": "file",
                  "src": "",
                  "description": "选择头像文件（JPG/PNG格式，最大5MB）"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/users/avatar",
              "host": ["{{base_url}}"],
              "path": ["users", "avatar"]
            }
          },
          "response": []
        },
        {
          "name": "获取用户公开信息",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "注销账号",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"TestPass123!\",\n  \"reason\": \"不再需要此账号\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/account",
              "host": ["{{base_url}}"],
              "path": ["users", "account"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 自动令牌刷新逻辑",
          "if (pm.request.url.toString().includes('/auth/') && !pm.request.url.toString().includes('/auth/refresh')) {",
          "    // 认证相关接口通常不需要令牌",
          "    return;",
          "}",
          "",
          "const accessToken = pm.collectionVariables.get('access_token');",
          "if (!accessToken) {",
          "    console.log('未找到访问令牌，请先登录');",
          "    return;",
          "}",
          "",
          "// 检查令牌是否即将过期（这里简化处理）",
          "// 实际项目中可以解析JWT的exp字段"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 通用响应验证",
          "pm.test('响应状态码正常', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
          "});",
          "",
          "pm.test('响应格式正确', function () {",
          "    const response = pm.response.json();",
          "    pm.expect(response).to.have.property('success');",
          "    pm.expect(response).to.have.property('meta');",
          "    if (response.success) {",
          "        pm.expect(response).to.have.property('data');",
          "    } else {",
          "        pm.expect(response).to.have.property('error');",
          "    }",
          "});",
          "",
          "pm.test('响应时间合理', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});"
        ]
      }
    }
  ]
}